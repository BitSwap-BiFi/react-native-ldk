name: mocha-android

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  mocha-android:
    runs-on: macos-12
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Docker Colima 1
        uses: douglascamata/setup-docker-macos-action@v1-alpha
        id: docker1
        continue-on-error: true

      - name: Setup Docker Colima 2
        if: steps.docker1.outcome != 'success'
        uses: douglascamata/setup-docker-macos-action@v1-alpha
        id: docker2
        continue-on-error: true

      - name: Setup Docker Default
        if: steps.docker1.outcome != 'success' && steps.docker2.outcome != 'success'
        uses: docker-practice/actions-setup-docker@1.0.12
        timeout-minutes: 30

      - name: Run regtest setup
        working-directory: example/docker
        run: |
          mkdir lnd
          mkdir clightning
          chmod 777 lnd clightning
          docker-compose up -d

      - name: Wait for electrum server
        timeout-minutes: 2
        run: while ! nc -z '127.0.0.1' 60001; do sleep 1; done

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn' # cache packages, but not node_modules
          cache-dependency-path: 'example/yarn.lock'

      - name: Cache lib node modules
        uses: actions/cache@v3
        id: lib-npmcache
        with:
          path: lib/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install lib dependencies
        if: steps.lib-npmcache.outputs.cache-hit != 'true'
        working-directory: lib
        run: yarn --no-audit --prefer-offline || yarn --no-audit --prefer-offline

      - name: Build lib
        working-directory: lib
        run: yarn build

      - name: Use gradle caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # - name: Cache node modules
      #   uses: actions/cache@v3
      #   id: cache-nm
      #   with:
      #     path: node_modules
      #     key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install node_modules
        working-directory: example
        run: yarn install && yarn rn-setup

      - name: Use specific Java version for sdkmanager to work
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      # - name: Build
      #   working-directory: example
      #   run: npx react-native run-android --no-packager

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          avd-name: Pixel_API_31_AOSP
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none -camera-front none -partition-size 2047
          arch: x86_64
          disable-animations: true
          working-directory: example
          script: |
            ../.github/workflows/mocha-anrdoid.sh

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ldk-data
          path: example/artifacts/
