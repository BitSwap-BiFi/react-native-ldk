name: mocha-ios

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  mocha-ios:
    runs-on: macos-12
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Docker Colima 1
        uses: douglascamata/setup-docker-macos-action@v1-alpha
        id: docker1
        continue-on-error: true
        with:
          lima: v0.18.0
          colima: v0.5.6

      - name: Setup Docker Colima 2
        if: steps.docker1.outcome != 'success'
        uses: douglascamata/setup-docker-macos-action@v1-alpha
        id: docker2
        continue-on-error: true
        with:
          lima: v0.18.0
          colima: v0.5.6

      - name: Setup Docker Default
        if: steps.docker1.outcome != 'success' && steps.docker2.outcome != 'success'
        uses: docker-practice/actions-setup-docker@1.0.12
        timeout-minutes: 30

      - name: Install backup-server dependencies
        working-directory: backup-server
        run: npm i || npm i

      - name: Run regtest setup
        working-directory: example/docker
        run: |
          mkdir lnd
          mkdir clightning
          chmod 777 lnd clightning
          docker-compose up -d --quiet-pull

      - name: Wait for electrum server
        timeout-minutes: 2
        run: while ! nc -z '127.0.0.1' 60001; do sleep 1; done

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn' # cache packages, but not node_modules
          cache-dependency-path: 'example/yarn.lock'

      - name: Cache lib node modules
        uses: actions/cache@v3
        id: lib-npmcache
        with:
          path: lib/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install lib dependencies
        if: steps.lib-npmcache.outputs.cache-hit != 'true'
        working-directory: lib
        run: yarn --no-audit --prefer-offline || yarn --no-audit --prefer-offline

      - name: Build lib
        working-directory: lib
        run: yarn build

      - name: Cache app node modules
        uses: actions/cache@v3
        id: cache-nm
        with:
          path: example/node_modules
          key: node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Rebuild detox
        if: steps.cache-nm.outputs.cache-hit == 'true'
        working-directory: example
        run: yarn detox clean-framework-cache && yarn detox build-framework-cache

      - name: Install Dependencies
        if: steps.cache-nm.outputs.cache-hit != 'true'
        working-directory: example
        run: yarn install --no-audit --prefer-offline && yarn rn-setup

      - name: Cache Pods
        uses: actions/cache@v3
        id: podcache
        with:
          path: example/ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Install pods
        working-directory: example
        run: |
          gem update cocoapods xcodeproj
          cd ios && pod install && cd ..

      - name: Install applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Build
        working-directory: example
        run: npx react-native run-ios --no-packager

      - name: Test iOS app
        working-directory: example
        run: yarn test:mocha:ios

      - name: Prepare articrafts
        if: failure()
        run: |
          mkdir articrafts
          find /Users/runner/Library/Developer/CoreSimulator/Devices/ -path '*Documents/ldk' -exec cp -r "{}" articrafts/ \;

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ldk-data
          path: articrafts
